[
  {
    "id": "tokens",
    "type": "category",
    "subPosts": ["erc20-tokens", "erc721-tokens"],
    "bannerUrl": "/images/Tokens_Img.png",
    "imageUrl": "/images/Tokens_Img.png",
    "title": "Tokens",
    "chartTitle": "",
    "chartDescription": "",
    "description": "Tokens, generally speaking, are non-mineable digital units of value that exist as registry entries in blockchains.",
    "content": [
      ["title-accent", "What is a token?"],
      ["paragraph", "Tokens, generally speaking, are non-mineable digital units of value that exist as registry entries in blockchains."],
      ["paragraph", "Tokens come in many different forms – they can be used as currencies for specific ecosystems or encode unique data. Additionally, some tokens might be redeemable for off-chain assets (i.e., gold, property, stocks)."],
      ["paragraph", "Tokens are generally issued by companies using existing third-party blockchains such as the Ethereum blockchain, as exemplified by the many ERC-20 tokens that were issued and sold through ICOs in 2017. Strictly speaking, tokens are not cryptocurrencies like Bitcoin or ether, but transferable units of value issued on top of a blockchain."],
      ["paragraph", "There are different token classifications based on the various characteristics of the tokens. The main classification uses functionality to divide tokens into utility tokens and security tokens. Utility tokens generally represent access to a service or can function as a medium of exchange within an ecosystem."],
      ["paragraph", "Token classification assesses features to distinguish between fungible and non-fungible tokens. If you take a dollar bill and swap it with another dollar bill, you keep the same value. It doesn’t make any difference what unit you hold, as they serve the same purpose. On the flip side, you cannot take a unique piece of art and replace it with a different piece of art."],
      ["paragraph", "The same principle holds for tokens. Taking USDC as an example again, it doesn’t matter which specific units you own. All ERC-20 compatible tokens are interchangeable and fungible. On the other hand, NFTs or non-fungible tokens compatible with ERC-721 like BOYC tokens have unique properties, and each unit must be treated differently."]
    ]
  },
  {
    "id": "erc20-tokens",
    "type": "category",
    "subPosts": ["erc20"],
    "bannerUrl": "/images/erc20-cat.png",
    "imageUrl": "/images/erc20-cat.png",
    "title": "ERC20 Tokens",
    "chartTitle": "",
    "chartDescription": "",
    "description": "The ERC-20 introduces a standard for Fungible Tokens, in other words, they have a property that makes each Token be exactly the same (in type and value) as another Token. For example, an ERC-20 Token acts just like the ETH, meaning that 1 Token is and will always be equal to all the other Tokens.",
    "content": [
      ["title-accent", "Title 1"],
      ["paragraph", "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book"]
    ]
  },
  {
    "id": "erc721-tokens",
    "type": "category",
    "subPosts": ["erc721"],
    "bannerUrl": "/images/erc721-cat.png",
    "imageUrl": "/images/erc721-cat.png",
    "title": "ERC721 Tokens",
    "chartTitle": "",
    "chartDescription": "",
    "description": "A Non-Fungible Token (NFT) is used to identify something or someone in a unique way. This type of Token is perfect to be used on platforms that offer collectible items, access keys, lottery tickets, numbered seats for concerts and sports matches, etc. This special type of Token has amazing possibilities so it deserves a proper Standard, the ERC-721 came to solve that!",
    "content": [
      ["title-accent", "Title 1"],
      ["paragraph", "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book"]
    ]
  },
  {
    "id": "erc20",
    "type": "product",
    "subPosts": [],
    "bannerUrl": "/images/erc20.png",
    "imageUrl": "/images/erc20.png",
    "title": "ERC20",
    "description": "The ERC-20 introduces a standard for Fungible Tokens, in other words, they have a property that makes each Token be exactly the same (in type and value) as another Token. For example, an ERC-20 Token acts just like the ETH, meaning that 1 Token is and will always be equal to all the other Tokens.",
    "chartTitle": "Product Price Bonding Curve",
    "chartDescription": "Bonding curve represents how product price is changed depending the number of product bought. With each purchase product is price decreasing until the minimum price is reached.",
    "content": [
      ["title-accent", "What is ERC-20?"],
      ["paragraph", "The ERC-20 introduces a standard for Fungible Tokens, in other words, they have a property that makes each Token be exactly the same (in type and value) as another Token. For example, an ERC-20 Token acts just like the ETH, meaning that 1 Token is and will always be equal to all the other Tokens."],
      ["image", "/images/ERC20_1.png"],
      ["image-links", ["https://ethereum.org/en/developers/docs/standards/tokens/erc-20", "https://eips.ethereum.org/EIPS/eip-20"]],
      ["title-accent", "ERC-20 Token Standard"],
      ["title", "Simple Summary"],
      ["paragraph", "A standard interface for tokens."],
      ["title", "Abstract"],
      ["paragraph", "The following standard allows for the implementation of a standard API for tokens within smart contracts. This standard provides basic functionality to transfer tokens, as well as allow tokens to be approved so they can be spent by another on-chain third party."],
      ["title", "Motivation"],
      ["paragraph", "A standard interface allows any tokens on Ethereum to be re-used by other applications: from wallets to decentralised exchanges."],
      ["image", "/images/ERC20_2.png"],
      ["title", "Token Specification"],
      ["subtitle-accented", "Methods"],
      ["subtitle-low", "NOTES:"],
      ["unordered-list", ["The following specifications use syntax from Solidity 0.4.17 (or above)", "Callers MUST handle false from returns (bool success). Callers MUST NOT assume that false is never returned!"]],
      ["subtitle-low", "1) name"],
      ["paragraph-secondary", "Returns the name of the token - e.g. <span class=\"post-item-page__consolas\">\"MyToken\"</span>."],
      ["paragraph-secondary", "<span class=\"post-item-page__accented\">OPTIONAL</span> - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present."],
      ["code-row", "function name() public view returns (string)"],
      ["subtitle-low", "2) symbol"],
      ["paragraph-secondary", "Returns the symbol of the token. E.g. “HIX”."],
      ["paragraph-secondary", "<span class=\"post-item-page__accented\">OPTIONAL</span> - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present."],
      ["code-row", "function symbol() public view returns (string)"],
      ["subtitle-low", "3) decimals"],
      ["paragraph-secondary", "Returns the number of decimals the token uses - e.g. <span class=\"post-item-page__consolas\">8</span>, means to divide the token amount by <span class=\"post-item-page__consolas\">100000000</span> to get its user representation."],
      ["paragraph-secondary", "<span class=\"post-item-page__accented\">OPTIONAL</span> - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present."],
      ["code-row", "function decimals() public view returns (uint8)"],
      ["subtitle-low", "4) totalSupply"],
      ["paragraph-secondary", "Returns the total token supply."],
      ["code-row", "function totalSupply() public view returns (uint256)"],
      ["subtitle-low", "5) balanceOf"],
      ["paragraph-secondary", "Returns the account balance of another account with address <span class=\"post-item-page__consolas\">_owner</span>."],
      ["code-row", "function balanceOf(address _owner) public view returns (uint256 balance)"],
      ["subtitle-low", "6) transfer"],
      ["paragraph-secondary", "Transfers <span class=\"post-item-page__consolas\">_value</span> amount of tokens to address <span class=\"post-item-page__consolas\">_to</span>, and MUST fire the <span class=\"post-item-page__consolas\">Transfer</span> event. The function SHOULD <span class=\"post-item-page__consolas\">throw</span> if the message caller’s account balance does not have enough tokens to spend."],
      ["paragraph-secondary", "<span class=\"post-item-page__accented\">Note</span> Transfers of 0 values MUST be treated as normal transfers and fire the <span class=\"post-item-page__consolas\">Transfer</span> event."],
      ["code-row", "function transfer(address _to, uint256 _value) public returns (bool success)"],
      ["subtitle-low", "7) transferFrom"],
      ["paragraph-secondary", "Transfers <span class=\"post-item-page__consolas\">_value</span> amount of tokens from address <span class=\"post-item-page__consolas\">_from</span> to address <span class=\"post-item-page__consolas\">_to</span>, and MUST fire the <span class=\"post-item-page__consolas\">Transfer</span> event."],
      ["paragraph-secondary", "The <span class=\"post-item-page__consolas\">transferFrom</span> method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf. This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies. The function SHOULD <span class=\"post-item-page__consolas\">throw</span> unless the <span class=\"post-item-page__consolas\">_from</span> account has deliberately authorized the sender of the message via some mechanism."],
      ["paragraph-secondary", "<span class=\"post-item-page__accented\">Note</span> Transfers of 0 values MUST be treated as normal transfers and fire the <span class=\"post-item-page__consolas\">Transfer</span> event."],
      ["code-row", "function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)"],
      ["subtitle-low", "8) approve"],
      ["paragraph-secondary", "Allows <span class=\"post-item-page__consolas\">_spender</span> to withdraw from your account multiple times, up to the <span class=\"post-item-page__consolas\">_value</span> amount. If this function is called again it overwrites the current allowance with <span class=\"post-item-page__consolas\">_value</span>."],
      ["paragraph-secondary", "To prevent attack vectors like the one <a target=\"_blank\" href=\"https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/edit\">described here</a> and discussed <a target=\"_blank\" href=\"https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\">here</a>, clients SHOULD make sure to create user interfaces in such a way that they set the allowance first to 0 before setting it to another value for the same spender. THOUGH The contract itself shouldn’t enforce it, to allow backwards compatibility with contracts deployed before"],
      ["code-row", "function approve(address _spender, uint256 _value) public returns (bool success)"],
      ["subtitle-low", "9) allowance"],
      ["paragraph-secondary", "Returns the amount which <span class=\"post-item-page__consolas\">_spender</span> is still allowed to withdraw from <span class=\"post-item-page__consolas\">_owner</span>."],
      ["code-row", "function allowance(address _owner, address _spender) public view returns (uint256 remaining)"],
      ["subtitle-accented", "Events"],
      ["subtitle-low", "1) Transfer"],
      ["paragraph-secondary", "<span class=\"post-item-page__accented\">MUST</span> trigger when tokens are transferred, including zero value transfers."],
      ["paragraph-secondary", "A token contract which creates new tokens SHOULD trigger a Transfer event with the <span class=\"post-item-page__consolas\">_from</span> address set to <span class=\"post-item-page__consolas\">0x0</span> when tokens are created."],
      ["paragraph-secondary", "event Transfer(address indexed _from, address indexed _to, uint256 _value)"],
      ["subtitle-low", "2) Approval"],
      ["paragraph-secondary", "<span class=\"post-item-page__accented\">MUST</span> trigger on any successful call to <span class=\"post-item-page__consolas\">approve(address _spender, uint256 _value)</span>."],
      ["code-row", "event Approval(address indexed _owner, address indexed _spender, uint256 _value)"],
      ["image", "/images/ERC20_3.png"],
      ["title-accent", "Implementation"],
      ["paragraph", "There are already plenty of ERC20-compliant tokens deployed on the Ethereum network. Different implementations have been written by various teams that have different trade-offs: from gas saving to improved security."],
      ["paragraph", "Example implementations are available at"],
      ["unordered-list", ["<a target=\"_blank\" href=\"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/9b3710465583284b8c4c5d2245749246bb2e0094/contracts/token/ERC20/ERC20.sol\">OpenZeppelin implementation</a>", "<a target=\"_blank\" href=\"https://github.com/ConsenSys/Tokens/blob/fdf687c69d998266a95f15216b1955a4965a0a6d/contracts/eip20/EIP20.sol\">ConsenSys implementation</a>"]],
      ["title", "History"],
      ["image", "/images/ERC20_4.png"],
      ["paragraph", "Historical links related to this standard:"],
      ["unordered-list", ["<a target=\"_blank\" href=\"https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs/499c882f3ec123537fc2fccd57eaa29e6032fe4a\">Original proposal from Vitalik Buterin</a>", "<a target=\"_blank\" href=\"https://www.reddit.com/r/ethereum/comments/3n8fkn/lets_talk_about_the_coin_standard/\">Reddit discussion</a>", "<a target=\"_blank\" href=\"https://github.com/ethereum/EIPs/issues/20\">Original Issue #20</a>"]]
    ]
  },
  {
    "id": "erc721",
    "type": "product",
    "subPosts": [],
    "bannerUrl": "/images/erc721.png",
    "imageUrl": "/images/erc721.png",
    "title": "ERC721",
    "description": "The ERC-721 introduces a standard for NFT, in other words, this type of Token is unique and can have different value than another Token from the same Smart Contract, maybe due to its age, rarity or even something else like its visual. Wait, visual?",
    "chartTitle": "Product Price Bonding Curve",
    "chartDescription": "Bonding curve represents how product price is changed depending the number of product bought. With each purchase product is price decreasing until the minimum price is reached.",
    "content": [
      ["title-accent", "What is a Non-Fungible Token?"],
      ["paragraph", "A Non-Fungible Token (NFT) is used to identify something or someone in a unique way. This type of Token is perfect to be used on platforms that offer collectible items, access keys, lottery tickets, numbered seats for concerts and sports matches, etc. This special type of Token has amazing possibilities so it deserves a proper Standard, the ERC-721 came to solve that!"],
      ["image", "../static/images/ERC721_1.png"],
      ["image-links", ["https://ethereum.org/en/developers/docs/standards/tokens/erc-721/", "https://eips.ethereum.org/EIPS/eip-721"]],
      ["title-accent", "What is ERC-721?"],
      ["paragraph", "The ERC-721 introduces a standard for NFT, in other words, this type of Token is unique and can have different value than another Token from the same Smart Contract, maybe due to its age, rarity or even something else like its visual. Wait, visual?"],
      ["paragraph", "Yes! All NFTs have a uint256 variable called tokenId, so for any ERC-721 Contract, the pair contract address, uint256 tokenId must be globally unique. That said, a dapp can have a \"converter\" that uses the tokenId as input and outputs an image of something cool, like zombies, weapons, skills or amazing kitties!"],
      ["image", "../static/images/ERC721_2.png"],
      ["title-accent", "ERC-721 Token Standard"],
      ["title", "Simple Summary"],
      ["paragraph", "A standard interface for non-fungible tokens, also known as deeds."],
      ["title", "Abstract"],
      ["paragraph", "The following standard allows for the implementation of a standard API for NFTs within smart contracts. This standard provides basic functionality to track and transfer NFTs."],
      ["paragraph", "We considered use cases of NFTs being owned and transacted by individuals as well as consignment to third party brokers/wallets/auctioneers (“operators”). NFTs can represent ownership over digital or physical assets. We considered a diverse universe of assets, and we know you will dream up many more:"],
      ["unordered-list", ["Physical property — houses, unique artwork", "Virtual collectables — unique pictures of kittens, collectable cards", "“Negative value” assets — loans, burdens and other responsibilities"]],
      ["paragraph", "In general, all houses are distinct and no two kittens are alike. NFTs are <span class=\"post-item-page__bold\">distinguishable</span> and you must track the ownership of each one separately."],
      ["title", "Motivation"],
      ["paragraph", "A standard interface allows wallet/broker/auction applications to work with any NFT on Ethereum. We provide for simple ERC-721 smart contracts as well as contracts that track an <span class=\"post-item-page__bold\">arbitrarily large</span> number of NFTs. Additional applications are discussed below."],
      ["paragraph", "This standard is inspired by the ERC-20 token standard and builds on two years of experience since EIP-20 was created. EIP-20 is insufficient for tracking NFTs because each asset is distinct (non-fungible) whereas each of a quantity of tokens is identical (fungible)."],
      ["paragraph", "Differences between this standard and EIP-20 are examined below."],
      ["title", "Specification"],
      ["paragraph", "The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119."],
      ["paragraph", "<span class=\"post-item-page__bold\">Every ERC-721 compliant contract must implement the ERC721 and ERC165 interfaces</span> (subject to “caveats” below):"],
      ["image", "../static/images/ERC721_3.png"],
      ["image", "../static/images/ERC721_4.png"],
      ["image", "../static/images/ERC721_5.png"],
      ["image", "../static/images/ERC721_6.png"],
      ["image", "../static/images/ERC721_7.png"],
      ["image", "../static/images/ERC721_8.png"],
      ["paragraph", "A wallet/broker/auction application MUST implement the <span class=\"post-item-page__bold\">wallet interface</span> if it will accept safe transfers."],
      ["image", "../static/images/ERC721_9.png"],
      ["paragraph", "The <span class=\"post-item-page__bold\">metadata extension</span> is OPTIONAL for ERC-721 smart contracts (see “caveats”, below). This allows your smart contract to be interrogated for its name and for details about the assets which your NFTs represent."],
      ["image", "../static/images/ERC721_10.png"],
      ["image", "../static/images/ERC721_11.png"],
      ["paragraph", "This is the “ERC721 Metadata JSON Schema” referenced above."],
      ["image", "../static/images/ERC721_12.png"],
      ["paragraph", "The <span class=\"post-item-page__bold\">enumeration extension</span> is OPTIONAL for ERC-721 smart contracts (see “caveats”, below). This allows your contract to publish its full list of NFTs and make them discoverable."],
      ["image", "../static/images/ERC721_13.png"],
      ["image", "../static/images/ERC721_14.png"],
      ["title", "Caveats"],
      ["paragraph", "The 0.4.20 Solidity interface grammar is not expressive enough to document the ERC-721 standard. A contract which complies with ERC-721 MUST also abide by the following:"],
      ["unordered-list", ["Solidity issue #3412: The above interfaces include explicit mutability guarantees for each function. Mutability guarantees are, in order weak to strong: <span class=\"post-item-page__consolas\">payable</span>, implicit nonpayable, <span class=\"post-item-page__consolas\">view</span>, and <span class=\"post-item-page__consolas\">pure</span>. Your implementation MUST meet the mutability guarantee in this interface and you MAY meet a stronger guarantee. For example, a <span class=\"post-item-page__consolas\">payable</span> function in this interface may be implemented as nonpayable (no state mutability specified) in your contract. We expect a later Solidity release will allow your stricter contract to inherit from this interface, but a workaround for version 0.4.20 is that you can edit this interface to add stricter mutability before inheriting from your contract.", "Solidity issue #3419: A contract that implements <span class=\"post-item-page__consolas\">ERC721Metadata</span> or <span class=\"post-item-page__consolas\">ERC721Enumerable</span> SHALL also implement <span class=\"post-item-page__consolas\">ERC721</span>. ERC-721 implements the requirements of interface ERC-165.", "Solidity issue #2330: If a function is shown in this specification as <span class=\"post-item-page__consolas\">external</span> then a contract will be compliant if it uses <span class=\"post-item-page__consolas\">public</span> visibility. As a workaround for version 0.4.20, you can edit this interface to switch to <span class=\"post-item-page__consolas\">public</span> before inheriting from your contract.", "Solidity issues #3494, #3544: Use of <span class=\"post-item-page__consolas\">this.*.selector</span> is marked as a warning by Solidity, a future version of Solidity will not mark this as an error."]],
      ["paragraph", "If a newer version of Solidity allows the caveats to be expressed in code, then this EIP MAY be updated and the caveats removed, such will be equivalent to the original specification."],
      ["image", "../statuc/image/ERC721_15.png"],
      ["title", "Rationale"],
      ["paragraph", "There are many proposed uses of Ethereum smart contracts that depend on tracking distinguishable assets. Examples of existing or planned NFTs are LAND in Decentraland, the eponymous punks in CryptoPunks, and in-game items using systems like DMarket or EnjinCoin. Future uses include tracking real-world assets, like real-estate (as envisioned by companies like Ubitquity or Propy). It is critical in each of these cases that these items are not “lumped together” as numbers in a ledger, but instead each asset must have its ownership individually and atomically tracked. Regardless of the nature of these assets, the ecosystem will be stronger if we have a standardized interface that allows for cross-functional asset management and sales platforms."],
      ["title", "“NFT” Word Choice"],
      ["paragraph", "“NFT” was satisfactory to nearly everyone surveyed and is widely applicable to a broad universe of distinguishable digital assets. We recognize that “deed” is very descriptive for certain applications of this standard (notably, physical property). Alternatives considered: distinguishable asset, title, token, asset, equity, ticket"],
      ["title", "NFT Identifiers"],
      ["paragraph", "Every NFT is identified by a unique uint256 ID inside the ERC-721 smart contract. This identifying number SHALL NOT change for the life of the contract. The pair (contract address, uint256 tokenId) will then be a globally unique and fully-qualified identifier for a specific asset on an Ethereum chain. While some ERC-721 smart contracts may find it convenient to start with ID 0 and simply increment by one for each new NFT, callers SHALL NOT assume that ID numbers have any specific pattern to them, and MUST treat the ID as a “black box”. Also note that NFTs MAY become invalid (be destroyed). Please see the enumeration functions for a supported enumeration interface."],
      ["paragraph", "The choice of uint256 allows a wide variety of applications because UUIDs and sha3 hashes are directly convertible to uint256."],
      ["title", "Transfer Mechanism"],
      ["paragraph", "ERC-721 standardizes a safe transfer function safeTransferFrom (overloaded with and without a bytes parameter) and an unsafe function transferFrom. Transfers may be initiated by:"],
      ["unordered-list", ["The owner of an NFT", "The approved address of an NFT", "An authorized operator of the current owner of an NFT"]],
      ["paragraph", "Additionally, an authorized operator may set the approved address for an NFT. This provides a powerful set of tools for wallet, broker and auction applications to quickly use a large number of NFTs."],
      ["paragraph", "The transfer and accept functions’ documentation only specify conditions when the transaction MUST throw. Your implementation MAY also throw in other situations. This allows implementations to achieve interesting results:"],
      ["unordered-list", ["Disallow transfers if the contract is paused — prior art, CryptoKitties deployed contract, line 611", "Blocklist certain address from receiving NFTs — prior art, CryptoKitties deployed contract, lines 565, 566", "Disallow unsafe transfers — transferFrom throws unless _to equals msg.sender or countOf(_to) is non-zero or was non-zero previously (because such cases are safe)", "Charge a fee to both parties of a transaction — require payment when calling approve with a non-zero _approved if it was previously the zero address, refund payment if calling approve with the zero address if it was previously a non-zero address, require payment when calling any transfer function, require transfer parameter _to to equal msg.sender, require transfer parameter _to to be the approved address for the NFT", "Read only NFT registry — always throw from safeTransferFrom, transferFrom, approve and setApprovalForAll"]],
      ["image", "../static/images/ERC721_16.png"]
    ]
  }
]
