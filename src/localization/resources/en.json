{
  "validations": {
    "field-error_required": "Please fill out this field",
    "field-error_email": "Field must be a valid email",
    "field-error_isAddress": "Field must be a valid ethereum address",
    "field-error_numeric": "Field must be a valid number",
    "field-error_maxValue": "Value can't be more than {max}",
    "field-error_minValue": "Value can't be less than {min}",
    "field-error_integer": "Value must be an integer",
    "field-error_url": "Value must be an URL",
    "field-error_maxBNValue": "Value can't be more than your balance"
  },
  "errors": {
    "default": "Oops... Something went wrong",
    "provider-user-rejected-request": "User rejected request.",
    "provider-unauthorized": "The requested method and/or account has not been authorized by the user.",
    "provider-unsupported-method": "The Provider does not support the requested method.",
    "provider-disconnected": "The Provider is disconnected from all chains.",
    "provider-chain-disconnected": "The Provider is not connected to the requested chain.",
    "provider-chain-invalid": "This chain is not supported, please select an available chain.",
    "provider-parse-error": "Invalid JSON standard",
    "provider-invalid-request": "JSON is not a valid request object standard",
    "provider-method-not-found": "Method does not exist standard",
    "provider-invalid-params": "Invalid method parameters standard",
    "provider-internal-error": "Internal JSON-RPC error standard",
    "provider-invalid-input": "Missing or invalid parameters non-standard",
    "provider-resource-not-found": "equested resource not found non-standard",
    "provider-resource-unavailable": "Requested resource not available non-standard",
    "provider-transaction-rejected": "Transaction creation failed non-standard",
    "provider-method-not-supported": "Method is not implemented non-standard",
    "provider-limit-exceeded": "Request exceeds defined limit non-standard",
    "provider-json-rpc-version-not-supported": "Version of JSON-RPC protocol is not supported non-standard",
    "provider-wrapper-method-not-found": "provider not exist or hasn't this method",
    "provider-unconnected": "Please, connect your MetaMask wallet.",
    "address-invalid": "The smart contract address is not correct.",
    "address-not-found": "No product with this address was found.",
    "can-not-create-initialize-data": "Initialize data can't be created for this product.",
    "product-not-found": "Product isn't found."
  },
  "notification": {
    "default-title-success": "Success!",
    "default-title-error": "Error",
    "default-title-warning": "Warning",
    "default-title-info": "Information",
    "default-title-processing": "Processing",
    "default-title-default": "Just a message",
    "default-message-success": "Action successful",
    "default-message-error": "Something went wrong",
    "default-message-warning": "Something you are doing is not recommended",
    "default-message-info": "Something is happening. Just want you to know that",
    "default-message-processing": "Something is happening. Just want you to know that",
    "default-message-default": "Just a message"
  },
  "filters": {
    "chains": {
      "ethereum": {
        "mainet": "Ethereum",
        "rinkeby": "Rinkeby",
        "ropsten": "Ropsten",
        "kovan": "Kovan",
        "goerli": "Goerli",
        "polygon": "Polygon",
        "optimism": "Optimism",
        "binance": "Binance",
        "arbitrum": "Arbitrum",
        "mumbai": "Mumbai",
        "localhost": "Localhost"
      }
    }
  },
  "main-page": {
    "our-products": "Our products",
    "show-more-btn": "Show more",
    "show-less-btn": "Show Less",
    "instruction-lbl": "How to use DAPPPAD"
  },
  "page-404": {
    "title": "We are sorry. There was an error loading and the page is not responding. Reload the page or check back later"
  },
  "address-copy": {
    "copied-msg": "You've copied the address"
  },
  "app-navbar": {
    "connect-btn": "Connect Wallet",
    "logout-btn": "Log Out",
    "wallet-address-lbl": "Wallet address",
    "balance-lbl": "Balance",
    "farm-link": "Cashback",
    "search-placeholder": "0x353C50AB9E10b62D75aD057327acdB39C0dB8a0B"
  },
  "app-footer": {
    "gitlab-link": "GitLab"
  },
  "posts-page": {
    "show-more-btn": "Show More",
    "show-less-btn": "Show Less"
  },
  "login-form": {
    "login-lbl": "Login",
    "password-lbl": "Password",
    "login-success-msg": "Access granted",
    "submit-btn": "Submit"
  },
  "posts-page-card": {
    "subcategories-lbl": "{amount} SubCategories",
    "price-lbl": "Price"
  },
  "gas-fee": {
    "lbl": "+ gas fee"
  },
  "product-card": {
    "current-price": "Current price",
    "more-info": "More info",
    "deploy": "Deploy",
    "erc20-not-found": "Available in ERC20",
    "erc20-owner-tooltip": "Smart contract ownership refers to the concept of who controls and has access to the code and data of a smart contract on a blockchain network. Smart contract ownership can also be transferred from one address to another",
    "erc20-owner-lbl": "Ownable",
    "erc20-approve-tooltip": "The \"approve\" functionality in smart contracts provides a flexible and secure way for token holders to grant access to their tokens to other entities, enabling the creation of DeFi applications and token trading platforms. By using the \"approve\" and \"transferFrom\" functions, users can trade, manage, and use their tokens in a decentralized and transparent manner.",
    "erc20-approve-lbl": "Approvable",
    "erc20-transfer-tooltip": "Token transfer functionality is a core feature of most blockchain-based tokens. It allows token holders to transfer their tokens to other addresses on the blockchain, enabling token trading, payments, and other use cases.",
    "erc20-transfer-lbl": "Transferable",
    "erc20-initial-mint-tooltip": "The initial mint of ERC-20 tokens is the process of creating the initial supply of tokens, setting their value, and distributing them to the initial holder. The ERC-20 standard provides a standardized and secure way of creating tokens on the Ethereum network, and the initial mint is an essential part of the token creation process.",
    "erc20-initial-mint-lbl": "Initial mint",
    "erc20-mint-tooltip": "Token mintable functionality is a feature that allows for the creation of new tokens after the initial supply has been established. It is an important tool for many token systems, enabling the creation of new tokens as needed to meet demand.",
    "erc20-mint-lbl": "Mintable",
    "erc20-burn-tooltip": "Token burnable functionality allows the permanent removal of tokens from the circulating supply. This is implemented as a smart contract method that can be invoked by the token owner to destroy their own tokens, reducing the total supply.",
    "erc20-burn-lbl": "Burnable",
    "erc20-cap-tooltip": "Token cap functionality is a feature in a token smart contract that sets a limit on the total supply of tokens that can be created. This limit, also known as the \"cap\", is implemented in the contract code and cannot be exceeded, even if the token is mintable.",
    "erc20-cap-lbl": "Capability",
    "erc721-not-found": "Available in ERC721",
    "erc721-owner-tooltip": "Smart contract ownership refers to the concept of who controls and has access to the code and data of a smart contract on a blockchain network. Smart contract ownership can also be transferred from one address to another",
    "erc721-owner-lbl": "Ownable",
    "erc721-set-base-u-r-i-tooltip": "Base URI is a functionality in the ERC-721 standard that allows each unique token in an ERC-721 token contract to have a unique identifier and a link to additional information about the token. The Base URI is a uniform resource identifier (URI) that is used to store metadata information about each token.",
    "erc721-set-base-u-r-i-lbl": "Base URI",
    "erc721-approve-tooltip": "The \"approve\" functionality in smart contracts provides a flexible and secure way for token holders to grant access to their tokens to other entities, enabling the creation of DeFi applications and token trading platforms. By using the \"approve\" and \"transferFrom\" functions, users can trade, manage, and use their tokens in a decentralized and transparent manner.",
    "erc721-approve-lbl": "Approvable",
    "erc721-transfer-tooltip": "Token transfer functionality is a core feature of most blockchain-based tokens. It allows token holders to transfer their tokens to other addresses on the blockchain, enabling token trading, payments, and other use cases.",
    "erc721-transfer-lbl": "Transferable",
    "erc721-mint-tooltip": "Token mintable functionality is a feature that allows for the creation of new tokens after the initial supply has been established. It is an important tool for many token systems, enabling the creation of new tokens as needed to meet demand.",
    "erc721-mint-lbl": "Mintable",
    "erc721-burn-tooltip": "Token burnable functionality allows the permanent removal of tokens from the circulating supply. This is implemented as a smart contract method that can be invoked by the token owner to destroy their own tokens, reducing the total supply.",
    "erc721-burn-lbl": "Burnable",
    "erc721-enum-tooltip": "Token enumerable functionality is a feature in an ERC-721 token smart contract that enables the listing of all the unique tokens that have been minted. This feature provides a clear and comprehensive view of the token supply, including information about each token's unique identifier, ownership, and other relevant details.",
    "erc721-enum-lbl": "Enumerable"
  },
  "post-item-page-checkout": {
    "have-product-lbl": "Already have this product?",
    "have-product-input-lbl": "Contract address",
    "have-product-input-tooltip-txt": "You can edit contracts that you already have",
    "current-network-lbl": "Current network",
    "sales-lbl": "Number of sales",
    "decrease-percent-lbl": "Decrease percent",
    "decrease-percent-tooltip": "A decrease percent refers to the percentage by which the price of a product decreases after each sale. For example, if the initial price of a product is 100 USDT and the decrease percent is 10%, then after the first sale, the price of the product would become 90 USDT (100 - 10%). This trend continues until the price reaches a minimum level.",
    "cashback-percent-lbl": "Cashback percent",
    "cashback-percent-tooltip": "The percentage of cashback refers to the amount of tokens available to the customer as a reward for making a purchase. This amount is calculated as a percentage of the total price of the product.",
    "implementation-address-lbl": "Implementation address",
    "factory-address-lbl": "Factory address",
    "minimal-price-lbl": "Minimal price",
    "minimal-price-tooltip": "The minimal price refers to the lowest price that the product can be sold for, which is determined when the sale price decreases after each sale.",
    "reward-lbl": "Reward",
    "reward-tooltip": "The specified number of tokens will be transferred to the buyer's address after the purchase",
    "cashback-lbl": "Cashback",
    "cashback-tooltip": "The cashback is a reward or refund offered to customers after they purchase a product. The cashback is distributed among all members who have purchased the same product before the current purchase.",
    "current-price-lbl": "Current price",
    "buy-now-link": "Deploy now",
    "buy-description-lbl": "Once the smart contract is deployed, it can then be configured."
  },
  "product-deploy": {
    "tx-processing": "Transaction processing...",
    "tx-processing-description": "It can takes a some time, please wait",
    "default": {
      "title": "Deploy",
      "subtitle": "Token",
      "description": "You are going to deploy some token.",
      "btn-lbl": "Deploy",
      "payment-group": "Payment info",
      "payment-lbl": "Payment token",
      "payment-info": "Select the token you want to pay with",
      "payment-balance": "Your balance",
      "product-price": "Product price",
      "empty-balance-lbl": "Your balance is empty",
      "mint-tokens-btn": "Mint Tokens",
      "product-swap-price": "Price including swap from {fromSymbol} to {toSymbol}",
      "discount-checkbox-lbl": "Use discount",
      "discount-input-lbl": "Amount",
      "discount-tooltip-lbl": "Amount of discount",
      "discount-available-lbl": "Available on account",
      "discount-price-lbl": "Product price with discount",
      "discount-manual-lbl": "The discount is automatically applied to the cashback pools with the highest cashback amount. For manual withdrawal activate \"Manual withdrawal\".",
      "discount-manual-switch-lbl": "Manual withdrawal",
      "discount-manual-available-lbl": "available",
      "discount-manual-inp-lbl": "Amount ({symbol})"
    },
    "erc721-common": {
      "description": "The process of deploying a smart contract on the network starts with setting the initial parameters of the smart contract, such as the name, symbol, etc. Once the initial parameters have been set, you must then select a payment method and, if necessary, apply any discounts. In the case of the first purchase, it will be necessary to perform a \"approve\", this will allow the smart contract to carry out the payment. Finally, the smart contract can be deployed to the network. This involves sending the compiled code of the contract to the network, where it will be added to the blockchain and executed by the network's nodes. At this point, the smart contract becomes fully operational and is accessible by anyone on the network.",
      "token-group": "NFT info",
      "name-lbl": "NFT name",
      "name-info": "Token name refers to the human-readable identifier given to a token in a blockchain network. It is a unique identifier for a specific token and helps users distinguish it from other tokens in the same network.",
      "symbol-lbl": "NFT symbol",
      "symbol-info": "Token symbol is a short, unique identifier that represents a token in a blockchain network. It is similar to a currency symbol (e.g. \"$\" for US Dollar) and serves as an abbreviated representation of the token name.",
      "btn-lbl": "Deploy",
      "deploy-success-message": "Congratulations! Your NFT smart contract has been successfully deployed to the blockchain network. Please note that the deployment process is irreversible and all transactions on this contract are secured by the blockchain technology. Thank you for using our platform."
    },
    "erc20-common": {
      "description": "The process of deploying a smart contract on the network starts with setting the initial parameters of the smart contract, such as the name, symbol, etc. Once the initial parameters have been set, you must then select a payment method and, if necessary, apply any discounts. In the case of the first purchase, it will be necessary to perform a \"approve\", this will allow the smart contract to carry out the payment. Finally, the smart contract can be deployed to the network. This involves sending the compiled code of the contract to the network, where it will be added to the blockchain and executed by the network's nodes. At this point, the smart contract becomes fully operational and is accessible by anyone on the network.",
      "token-group": "Token info",
      "name-lbl": "Token name",
      "name-info": "Token name refers to the human-readable identifier given to a token in a blockchain network. It is a unique identifier for a specific token and helps users distinguish it from other tokens in the same network.",
      "symbol-lbl": "Token symbol",
      "symbol-info": "Token symbol is a short, unique identifier that represents a token in a blockchain network. It is similar to a currency symbol (e.g. \"$\" for US Dollar) and serves as an abbreviated representation of the token name.",
      "decimals-lbl": "Token decimals",
      "decimals-info": "Token decimals refer to the number of decimal places that a token can be divided into. It is a property of a token in a blockchain network and determines the smallest unit of the token that can be traded or owned.",
      "cap-lbl": "Max token supply",
      "cap-info": "A token cap limits the total supply of tokens in circulation and is a way to manage the value and scarcity of the tokens.",
      "mint-group": "Mint info",
      "mint-amount-lbl": "Mint amount",
      "mint-amount-info": "Token initialize mint amount refers to the total number of tokens that will be created and available for distribution at the time of the smart contract's deployment.",
      "mint-receiver-lbl": "Mint receiver",
      "mint-receiver-info": "Enter initialize mint amount receiver.",
      "btn-lbl": "Deploy",
      "deploy-success-message": "Congratulations! Your smart contract has been successfully deployed to the blockchain network. Please note that the deployment process is irreversible and all transactions on this contract are secured by the blockchain technology. Thank you for using our platform."
    },
    "modal": {
      "name-lbl": "Name",
      "symbol-lbl": "Symbol",
      "decimals-lbl": "Decimals",
      "cap-lbl": "Cap (max total supply)",
      "mint-amount-lbl": "Minted",
      "mint-receiver-lbl": "Minted to",
      "contract-lbl": "Contract address"
    }
  },
  "product-edit": {
    "default": {
      "overview": "Overview",
      "title": "Editing",
      "description": "You are editing smart contract.",
      "subtitle": "Token",
      "address-prefix": "Contract",
      "interaction-lbl": "Interaction",
      "info-lbl": "Info",
      "info-btn-more": "Show more",
      "info-btn-less": "Show less",
      "tab-read": "Read",
      "tab-write": "Write"
    },
    "erc20-common": {
      "title": "Editing",
      "description": "Her you can find a user interface where you can interact with a deployed smart contract on a blockchain network. This page allows users to initiate transactions with the smart contract, such as sending tokens, executing functions, and modifying contract parameters. We displays relevant information about the contract, such as its balance and the current state of its variables. The user can submit transactions to the network, which will be executed by the smart contract and recorded on the blockchain. We provide a visual representation of the contract's functions and their results, making it easier for users to understand and interact with the smart contract.",
      "total": "Total supply",
      "max-supply": "Max total supply",
      "tracker": "Token tracker",
      "owner": "Owner address",
      "decimals": "Decimals",
      "balance": "Your balance",
      "interaction": "Interaction"
    },
    "erc721-common": {
      "title": "Editing",
      "description": "Her you can find a user interface where you can interact with a deployed smart contract on a blockchain network. This page allows users to initiate transactions with the smart contract, such as sending tokens, executing functions, and modifying contract parameters. We displays relevant information about the contract, such as its balance and the current state of its variables. The user can submit transactions to the network, which will be executed by the smart contract and recorded on the blockchain. We provide a visual representation of the contract's functions and their results, making it easier for users to understand and interact with the smart contract.",
      "tracker": "Token tracker",
      "owner": "Owner address",
      "balance": "Your balance",
      "interaction": "Interaction",
      "baseURI": "Base URI",
      "baseURI-default-value": "Not set yet"
    }
  },
  "product-prefix": {
    "erc20": "Token",
    "erc721": "Token"
  },
  "cashback-page": {
    "title": "Cashback",
    "subtitle": "Points are awarded for each product purchase, they determine your share of cashback, which will be distributed at the next purchase of the same product. The amount of points you receive directly depends on how much you spend on the product. The earlier or the more often you bought the product, the more points will be added to your address. Cashback in its turn depends on the points and is granted for each product separately. Cashback can be used as a discount on the purchase of any product and can only be used at the address to which it was credited upon purchase.",
    "no-pools": "Cashback not found =(",
    "card-points": "Your Points",
    "card-cashback": "Cashback",
    "tabs-chart": "Chart",
    "tabs-rating": "Rating",
    "rating-address": "Buyer address",
    "rating-points": "Points",
    "rating-share": "Share"
  },
  "cashback-history": {
    "title": "History",
    "switch-left-lbl": "Global",
    "switch-right-lbl": "My",
    "grid-address-lbl": "Address",
    "grid-date-lbl": "Date and time",
    "grid-amount-lbl": "Amount (DAPP)"
  }
}
